(define (domain dockDomain)
    (:requirements :strips)
    (:predicates
        (truck ?x) (container ?x) (pier ?x)
        (connected ?pier1 ?pier2) (empty ?pier)
        (at ?truck ?pier) (located ?container ?pier)
        (loaded ?truck ?container) (free ?truck) 
        (on ?container1 ?container2) (clear ?container) (onPier ?container)
    )
    (:action Move
        :parameters ( ?T ?A ?B )
        :precondition (and (truck ?T) (pier ?A) (pier ?B) (at ?T ?A) 
                           (connected ?A ?B) (empty ?B))
        :effect (and (at ?T ?B) (not (at ?T ?A)) 
                     (not (empty ?B)) (empty ?A) )
    )
    (:action Load
        :parameters ( ?T ?C ?A )
        :precondition (and (truck ?T) (container ?C) (pier ?A)
                           (at ?T ?A) (free ?T) 
                           (located ?C ?A) (clear ?C) (onPier ?C) )
        :effect (and (loaded ?T ?C) (not (free ?T)) (not (located ?C ?A))
                     (not (clear ?C)) (not(onPier ?C)) )
    )
    (:action Unload
        :parameters ( ?T ?C ?A )
        :precondition (and (truck ?T) (container ?C) (pier ?A) 
                           (at ?T ?A) (loaded ?T ?C) )
        :effect (and (located ?C ?A) (clear ?C) (onPier ?C)
                     (free ?T) (not (loaded ?T ?C)) )
    )
    (:action Stack
        :parameters ( ?T ?C1 ?C2 ?A )
        :precondition (and (truck ?T) (container ?C1) (container ?C2) (pier ?A)
                           (at ?T ?A) (free ?T) 
                           (located ?C1 ?A) (clear ?C1) (onPier ?C1)
                           (located ?C2 ?A) (clear ?C2) )
        :effect (and (on ?C1 ?C2) (not (clear ?C2)) 
                     (not (onPier ?C1)) )
    )
    (:action Unstack
        :parameters ( ?T ?C1 ?C2 ?A )
        :precondition (and (truck ?T) (container ?C1) (container ?C2) (pier ?A)
                           (at ?T ?A) (free ?T) 
                           (located ?C1 ?A) (located ?C2 ?A)
                           (on ?C1 ?C2) (clear ?C1) )
        :effect (and (not(on ?C1 ?C2)) 
                     (clear ?C2) (onPier ?C1))
    )
)